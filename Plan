Before writing program:

Brainstorming
- Modified Connect Four (see /Game description)

Schedule
- basic window + game loop by Nov. 13
- UML diagram by Nov. 15
- algorithm by Nov. 18
- actual code by Nov. 21
- fix all bugs in actual code by Nov. 22

Division of labour:
- Sameer: initialize window, design board for beginning of game
- Nuzhat: game logic (user input, animation rendering, point tracking, etc.)
- Both: game description, prototype, algorithm + coding (sections relating to our respective tasks)

Prototype
- create window titled "Modified Connect Four" (all graphics described in proceeding steps to be displayed on this window)
- display instructions to players on top left (LEFT/RIGHT arrow keys to select column, SPACE to drop token, winner has most
four-in-a-rows), game board (brown rectangle with circles of same colour as background (grey) in 7 x 5 pattern), and red token
hovering over fourth column; move token to nearest left or nearest right column in response to LEFT/RIGHT arrow keys pressed
- on SPACE pressed, get rid of instructions, show scoreboard on top left ("Player RED - 0" and "Player BLUE - 0"), fill lowest
background-coloured circle in column token was originally hovering over with red (same colour as hovering token), change colour
of hovering token to blue (if hovering token were originally blue, would be changed to red)
- continue with pattern (LEFT/RIGHT to changing columns, SPACE to fill lowest grey circle in same column as hovering token and
change hovering token's colour to other red or blue, depending on what it last was)
- if any one token colour fills in four of board's circles in a row (horizontally, vertically, or diagonally), one point for
player of that colour; update scoreboard accordingly
- when all slots filled, get rid of scoreboard and display final score in centre of window above hovering token (if one player
has more points than another: "Player [player's colour] wins [final score]"; if tie, "Tie game [final score]")

Algorithm
[...]

------ After writing program ------

Test cases
[...]

Feedback
[...]
